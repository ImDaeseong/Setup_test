#include "ifx.h"

prototype NUMBER Shell32.FindExecutableA(STRING, STRING, BYREF STRING);
prototype NUMBER Shell32.ShellExecuteA(HWND, STRING, STRING, STRING, STRING, INT);

prototype runStartPage();
prototype IsInstallRedist();


//설치 시작
function OnFirstUIBefore()
    number  nResult, nLevel, nSize, nSetupType;
    string  szTitle, szMsg, szOpt1, szOpt2, szLicenseFile;
    string  szName, szCompany, szTargetPath, szDir, szFeatures;
    BOOL    bLicenseAccepted;
    number nindex;
begin	
    
    if( REMOVEONLY ) then
        Disable( DIALOGCACHE );
		szMsg = SdLoadString( IDS_IFX_ERROR_PRODUCT_NOT_INSTALLED_UNINST );
   		SdSubstituteProductInfo( szMsg );
		MessageBox( szMsg, SEVERE );
		abort;
    endif;
   
    nSetupType = COMPLETE;	
    //szDir = TARGETDIR;
    szDir = PROGRAMFILES ^@ID_STRING1;  	
    TARGETDIR = szDir;
        
    szName = "";
    szCompany = "";
    bLicenseAccepted = FALSE;

Dlg_Start:
    nResult = 0;

Dlg_SdWelcome:
    szTitle = "";
    szMsg = "";
    nResult = SdWelcome( szTitle, szMsg );
    
    if (nResult = BACK) goto Dlg_Start;

Dlg_SdLicense2:
    szTitle = "";
    szOpt1 = "";
    szOpt2 = "";

    szLicenseFile = SUPPORTDIR ^ "License.txt";   
    nResult = SdLicense( szTitle, szOpt1, szOpt2, szLicenseFile );
    
    if (nResult = BACK) then
        goto Dlg_SdWelcome;
    else
        bLicenseAccepted = TRUE;
    endif;
    
    Enable(STATUSEX);
	Disable(STATUSEX); 


Dlg_SdAskDestPath2:

    if ((nResult = BACK) && (nSetupType != CUSTOM)) goto Dlg_SdLicense2;
	szTitle = "";
    szMsg = "";

    szDir = TARGETDIR;	
    nResult = SdAskDestPath2( szTitle, szMsg, szDir );  
    
    nindex = StrFind( szDir, "MyProject");	
	if( nindex < 0) then
       TARGETDIR = szDir ^@ID_STRING1;       
    else
       TARGETDIR = szDir;   
    endif;
    
    
    if (nResult = BACK) goto Dlg_SdLicense2;

Dlg_SdFeatureTree: 
    if ((nResult = BACK) ) goto Dlg_SdAskDestPath2;

  
Dlg_SdStartCopy2:
    szTitle = "MyProject 설치";
    szMsg = "MyProject 설치 파일을 복사합니다.";
    
    nResult = SdStartCopy2( szTitle, szMsg );	
    if (nResult = BACK) goto Dlg_Start;

    SetStatusExStaticText( SdLoadString( IDS_IFX_STATUSEX_STATICTEXT_FIRSTUI ) );
 
    return 0;
end;


//설치 완료
function OnFirstUIAfter()
    STRING szTitle, szMsg1, szMsg2, szOpt1, szOpt2;
    NUMBER bvOpt1, bvOpt2;
    NUMBER nResult;
    STRING szProgram;
    STRING Found;
    BOOL bRedistInstall;
    NUMBER nReserved, nOption; 
begin

    ShowObjWizardPages(NEXT);
    
    szTitle = "";
    szMsg1 = ""; 
    szMsg2 = "";
    szOpt1 = "";
    szOpt2 = "";
	bvOpt1   = FALSE;
    bvOpt2   = FALSE;    
    
    Disable (BACKBUTTON);   

    if ( IsInstallRedist() != 1 ) then 
       
       szProgram = SUPPORTDIR ^ "VC_redist.x86.exe";   
	   nResult = FindExecutableA(szProgram, "", Found);
	   if (nResult > 32) then
		  		  
		  if (LaunchAppAndWait(szProgram, " /install /quiet /norestart", WAIT) < 0) then
			 MessageBox(szProgram + "VC_redist.x86 설치 오류" , INFORMATION);
		  else
		   	
			 if(IsInstallRedist() == 1) then //설치 성공				
				bRedistInstall = TRUE;
				//MessageBox(szProgram + "VC_redist.x86 설치 성공" , INFORMATION);
			 endif;
		  endif;
	   else
	      MessageBox( "Can't launch VC_redist.x86.exe", WARNING);	  
	   endif;
	   
    endif;   
   
    //설치 여부 확인	
	if(bRedistInstall == TRUE) then
		    
        //시작 프로그램 등록    
        runStartPage();
        
        //LaunchApp(TARGETDIR^"MyProject.exe", "");
        
	endif;	

	
	Disable( STATUSEX );

    ShowObjWizardPages( NEXT );  
  
    szTitle   = "MyProject 설치 완료"; 
	if (SdFinishReboot (szTitle, szMsg1, nOption, szMsg2, nReserved) < 0) then 
		MessageBox ("SdFinishReboot failed.", SEVERE); 
	endif; 
	
end;


//삭제 시작
function OnMaintUIBefore()
    number	nResult, nType;
    string	szTitle, szMsg;
    string  szStartPageKey, szStartPageValue;
begin
	
	nType = MODIFY;
    OnSQLServerInitializeMaint();

Dlg_Start:

    if( !REMOVEONLY ) then
	    Disable( BACKBUTTON );
	    nType = SdWelcomeMaint( szTitle, szMsg, nType );
	    Enable( BACKBUTTON );
        nResult = NEXT;
    else
        Disable( DIALOGCACHE );
        nType = REMOVEALL;
    endif;

    if ( nType = REMOVEALL ) then
		nResult = MessageBox( SdLoadString( IFX_MAINTUI_MSG ), MB_YESNO );
		if (nResult != IDYES ) then
            
            if( REMOVEONLY ) then
                // In REMOVEONLY mode, abort the setup.
                abort;
            else
                // In non-REMOVEONLY mode, redisplay the previous dialog.
			    goto Dlg_Start;
            endif;

		endif;
	endif;

Dlg_SdFeatureTree:
	if ( nType = MODIFY ) then
		szTitle = "";
		szMsg = SdLoadString( SD_STR_COMPONENT_MAINT_MSG );
		nResult = SdFeatureTree( szTitle, szMsg, TARGETDIR, "", -1 );
		if ( nResult = BACK ) goto Dlg_Start;
    endif;

Dlg_ObjDialogs:
    nResult = ShowObjWizardPages( nResult );
    if ( ( nResult = BACK ) && ( nType != MODIFY ) ) goto Dlg_Start;
    if ( ( nResult = BACK ) && ( nType = MODIFY ) ) goto Dlg_SdFeatureTree;

	switch(nType)

        case REMOVEALL:
						
			// 시작페이지 등록 정보 제거
			RegDBSetDefaultRoot (HKEY_CURRENT_USER);
			szStartPageKey = "Software\\Microsoft\\Windows\\CurrentVersion\\Run";
			szStartPageValue = "MyProject";
			if (RegDBKeyExist(szStartPageKey) >= 0) then
				RegDBDeleteValue(szStartPageKey, szStartPageValue);
			endif;
						
			// Ensure that all previously installed features are removed.
			FeatureRemoveAllInMediaAndLog();

            // Added in 11.0 - Set appropriate StatusEx static text.
            SetStatusExStaticText( SdLoadString( IDS_IFX_STATUSEX_STATICTEXT_MAINTUI_REMOVEALL ) );

        case REPAIR:
				
			// Changed for DevStudio 9, Disk1 files are now always updated when installed
			// so when running from ADDREMOVE we need to prevent these files from being
			// updated since this will result in files being updated that are locked by the setup.
			// Updating these files when running from ADDREMOVE should not be needed since updates
			// are not run directly from Add/Remove.
            if( ADDREMOVE ) then
                // Reinstall all previously installed features, except
                // disk1 features.
                FeatureUpdate( "" );
            else
                // Reinstall all previously installed features.
                FeatureReinstall();
            endif;

            // Added in 11.0 - Set appropriate StatusEx static text.
            SetStatusExStaticText( SdLoadString( IDS_IFX_STATUSEX_STATICTEXT_MAINTUI_REPAIR ) );

        case MODIFY:
            
            // Added in 11.0 - Set appropriate StatusEx static text.
            SetStatusExStaticText( SdLoadString( IDS_IFX_STATUSEX_STATICTEXT_MAINTUI_MODIFY ) );

    endswitch;
 
end;


//삭제 완료
function OnMaintUIAfter()
    STRING szTitle, szMsg1, szMsg2, szOpt1, szOpt2;
    NUMBER bvOpt1, bvOpt2;
begin

    ShowObjWizardPages(NEXT);
    
    if( REMOVEALLMODE ) then
        szTitle = SdLoadString(IFX_SDFINISH_REMOVE_TITLE);
        szMsg1 = SdLoadString(IFX_SDFINISH_REMOVE_MSG1);
    else
        szTitle = SdLoadString(IFX_SDFINISH_MAINT_TITLE);    
        szMsg1  = SdLoadString(IFX_SDFINISH_MAINT_MSG1);
    endif;

	szMsg2 = "";    
    szOpt1 = "";
    szOpt2 = "";
	bvOpt1   = FALSE;
    bvOpt2   = FALSE;    

    szTitle   = "MyProject 제거 완료";      
    Sleep(500);
    SdFinish ( szTitle , szMsg1 , szMsg2 , szOpt1 , szOpt2 , bvOpt1 , bvOpt2 );
       
end;


function runStartPage()
   
   STRING szValue, szKey, szName;
   
begin
   
    RegDBSetDefaultRoot (HKEY_CURRENT_USER);
	szKey = "\\Software\\Microsoft\\Windows\\CurrentVersion\\Run";
  	szName = TARGETDIR ^ "MyProject.exe";
	if (RegDBSetKeyValueEx ( szKey , "MyProject" , REGDB_STRING , szName , -1 ) < 0) then
      //MessageBox ("RegDBSetKeyValueEx failed.", SEVERE);
      abort;
    endif;   
    
end;

function IsInstallRedist()

    STRING szTitle;
    NUMBER nResult, nvType, nSize;
    STRING szRedistx86_1, szRedistx86_2;
	STRING szValue;
	BOOL bInstallChecking;
    
begin
     bInstallChecking = FALSE;
     nResult = 0;
    
    szRedistx86_1 = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{dfea0fad-88b2-4a1f-8536-3f8f9391f4ef}";
    szRedistx86_2 = "SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{dfea0fad-88b2-4a1f-8536-3f8f9391f4ef}";
    nvType = REGDB_STRING;
    RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
    
    //Check1
    nResult = RegDBGetKeyValueEx(szRedistx86_1, "DisplayName", nvType, szValue, nSize);
    if(nResult == 0) then	
		bInstallChecking = TRUE;//레지스트리키가 있다		
	endif;	
	
	
	//Check2
	if bInstallChecking == FALSE then
		nResult = RegDBGetKeyValueEx(szRedistx86_2, "DisplayName", nvType, szValue, nSize);
		if(nResult == 0) then	
			bInstallChecking = TRUE;//레지스트리키가 있다		
		endif;	
	endif;
	
	
	if(bInstallChecking) then
		nResult =  1;
	else
		nResult = 0;
	endif;
	
    return nResult;
end;
