
#include "ifx.h"


prototype Shell32.ShellExecuteA(HWND,BYREF STRING,BYREF STRING,BYREF STRING,BYREF STRING,INT);
prototype LaunchDefaultBrowser(STRING);
prototype CheckBoxState(STRING, NUMBER);

#define RES_DIALOG_ID	   3000 //다이얼로그
#define RES_BTNDEL_ID      3001 //제거
#define RES_BTNCANCEL_ID   3002 //취솣
#define RES_EDIT_ID        3003 //기타 입력창

#define RES_LEFT1CHECK_ID       3004
#define RES_LEFT2CHECK_ID       3005
#define RES_LEFT3CHECK_ID       3006
#define RES_LEFT4CHECK_ID       3007

#define RES_RIGHT1CHECK_ID       3008
#define RES_RIGHT2CHECK_ID       3009
#define RES_RIGHT3CHECK_ID       3010

prototype CheckEzDefineDialog();

//설치 시작
function OnFirstUIBefore()
    number  nResult, nLevel, nSize, nSetupType;
    string  szTitle, szMsg, szOpt1, szOpt2, szLicenseFile;
    string  szName, szCompany, szTargetPath, szDir, szFeatures;
    BOOL    bLicenseAccepted;
    number nindex;
begin	

    if( REMOVEONLY ) then
        Disable( DIALOGCACHE );
		szMsg = SdLoadString( IDS_IFX_ERROR_PRODUCT_NOT_INSTALLED_UNINST );
   		SdSubstituteProductInfo( szMsg );
		MessageBox( szMsg, SEVERE );
		abort;
    endif;
   
    nSetupType = COMPLETE;	    
    szDir = PROGRAMFILES ^@ID_STRING2;	
    TARGETDIR = szDir;
    
    szName = "";
    szCompany = "";
    bLicenseAccepted = FALSE;
    
    
Dlg_Start:
    nResult = 0;

Dlg_SdWelcome:
    szTitle = "";
    szMsg = "";
    nResult = SdWelcome( szTitle, szMsg );
    
    if (nResult = BACK) goto Dlg_Start;

Dlg_SdStartCopy2:
    
    SetStatusExStaticText( SdLoadString( IDS_IFX_STATUSEX_STATICTEXT_FIRSTUI ) );
 
    return 0;
end;

//설치 완료
function OnFirstUIAfter()
    STRING szTitle, szMsg1, szMsg2, szOpt1, szOpt2;
    NUMBER bvOpt1, bvOpt2;
    NUMBER nReserved, nOption; 
begin

    ShowObjWizardPages(NEXT);
    
    szTitle = "";
    szMsg1 = ""; 
    szMsg2 = "";
    szOpt1 = "";
    szOpt2 = "";
	bvOpt1   = FALSE;
    bvOpt2   = FALSE;    
    
    Disable (BACKBUTTON);    
    
    //설치 항목 복사
    
    
    Disable( STATUSEX );

    ShowObjWizardPages( NEXT );  
  
    szTitle   = "나의프로젝트 설치 완료"; 
	if (SdFinishReboot (szTitle, szMsg1, nOption, szMsg2, nReserved) < 0) then 
		MessageBox ("SdFinishReboot failed.", SEVERE); 
	endif; 
   
end;


//삭제 시작
function OnMaintUIBefore()
    number	nResult, nType, nRetval;
    string	szTitle, szMsg;
begin
	
	// nType defaults to MODIFY.
	nType = MODIFY;

    //Initialize SQL
    OnSQLServerInitializeMaint();

// Beginning of UI Sequence
Dlg_Start:

    nRetval = CheckEzDefineDialog();
    if(nRetval = 0) then
        abort;
	endif;
    
    
    Disable( DIALOGCACHE );

    nType = REMOVEALL;
        
	nResult = MessageBox( SdLoadString( IFX_MAINTUI_MSG ), MB_YESNO );
	if (nResult != IDYES ) then
        abort;
	endif;

    
Dlg_ObjDialogs:
    nResult = ShowObjWizardPages( nResult );
    if ( ( nResult = BACK ) && ( nType != MODIFY ) ) goto Dlg_Start;
    
        
	// Ensure that all previously installed features are removed.
	FeatureRemoveAllInMediaAndLog();

    // Added in 11.0 - Set appropriate StatusEx static text.
    SetStatusExStaticText( SdLoadString( IDS_IFX_STATUSEX_STATICTEXT_MAINTUI_REMOVEALL ) );
 
end;


//삭제 완료
function OnMaintUIAfter()
    STRING szTitle, szMsg1, szMsg2, szOpt1, szOpt2;
    NUMBER bvOpt1, bvOpt2;
begin

    ShowObjWizardPages(NEXT);
    
    
    if( REMOVEALLMODE ) then
        szTitle = SdLoadString(IFX_SDFINISH_REMOVE_TITLE);
        szMsg1 = SdLoadString(IFX_SDFINISH_REMOVE_MSG1);
    else
        szTitle = SdLoadString(IFX_SDFINISH_MAINT_TITLE);    
        szMsg1  = SdLoadString(IFX_SDFINISH_MAINT_MSG1);
    endif;

	szMsg2 = "";    
    szOpt1 = "";
    szOpt2 = "";
	bvOpt1   = FALSE;
    bvOpt2   = FALSE;    

    szTitle   = "나의프로젝트 제거 완료";      
    Sleep(500);
    SdFinish ( szTitle , szMsg1 , szMsg2 , szOpt1 , szOpt2 , bvOpt1 , bvOpt2 );
    
end;



function CheckEzDefineDialog()
   
    STRING  szDialogName, szEditText, szCheckValue, szParam; 
    
    BOOL    bDone, bCheck;
   
    NUMBER  nCmdValue, nResult, nControl, nCheckControl, nRetval;

begin  
    
    szDialogName = "삭제시 설문 조사";
    szEditText = "";
    
    nResult = EzDefineDialog(szDialogName, SUPPORTDIR ^ "ISUser1.dll", "", RES_DIALOG_ID);    
      
    if (nResult < 0) then
       MessageBox ("Error in defining dialog", SEVERE);
       abort;
    endif; 
        
    bDone = FALSE;
    bCheck = FALSE;    
    nCheckControl = 1;
    nRetval = 0;

    repeat

    nCmdValue = WaitOnDialog(szDialogName);

    switch (nCmdValue)  
    
         case DLG_CLOSE:

            Do (EXIT);
            
         case DLG_ERR:

            bDone = TRUE;    
            abort;
            
         case DLG_INIT:
                     
              CtrlSetText(szDialogName, RES_EDIT_ID, szEditText);              
         
              
         case RES_BTNDEL_ID:
              
              if (bCheck = TRUE) then
                 bDone = TRUE;  
                 nControl = RES_BTNDEL_ID;              
              endif;              

         case RES_BTNCANCEL_ID:
         
              bDone = TRUE;                
              nControl = RES_BTNCANCEL_ID;
             
         case RES_LEFT1CHECK_ID:
         
              nCheckControl = RES_LEFT1CHECK_ID;
              bCheck = TRUE; 
              CheckBoxState(szDialogName, 1);              
              
         case RES_LEFT2CHECK_ID:
         
              nCheckControl = RES_LEFT2CHECK_ID;
              bCheck = TRUE; 
              CheckBoxState(szDialogName, 2);
              
         case RES_LEFT3CHECK_ID:
         
              nCheckControl = RES_LEFT3CHECK_ID;
              bCheck = TRUE; 
              CheckBoxState(szDialogName, 3);
              
         case RES_LEFT4CHECK_ID:
         
              nCheckControl = RES_LEFT4CHECK_ID; 
              bCheck = TRUE; 
              CheckBoxState(szDialogName, 4);

         case RES_RIGHT1CHECK_ID:
         
              nCheckControl = RES_RIGHT1CHECK_ID;
              bCheck = TRUE; 
              CheckBoxState(szDialogName, 5);
              
         case RES_RIGHT2CHECK_ID:
         
              nCheckControl = RES_RIGHT2CHECK_ID; 
              bCheck = TRUE; 
              CheckBoxState(szDialogName, 6);
              
         case RES_RIGHT3CHECK_ID:
         
              nCheckControl = RES_RIGHT3CHECK_ID;
              bCheck = TRUE; 
              CheckBoxState(szDialogName, 7);   
           
    endswitch;

   until bDone;
   
     if (nControl = RES_BTNDEL_ID) then
		
		//삭제
		nRetval = 1;
        
	 elseif (nControl = RES_BTNCANCEL_ID) then
	 
	    //취소
	    nRetval = 0;
        
     endif;
   
     EndDialog (szDialogName);
     ReleaseDialog (szDialogName);

   return nRetval;    
	
end;


function LaunchDefaultBrowser(szURL)
    HWND hWnd;
    LONG lResult;
    STRING szTemp1, szTemp2;

begin

    szTemp1 = "open";
    szTemp2 = "";
    hWnd = GetWindowHandle(HWND_INSTALL);
    UseDLL(WINSYSDIR ^ "Shell32.dll");
    lResult = Shell32.ShellExecuteA(hWnd, szTemp1, szURL, szTemp2, szTemp2, SW_SHOW);
    UnUseDLL(WINSYSDIR ^ "Shell32.dll");

    return lResult;
    
end;


function CheckBoxState(szDialogName, nCheck)

begin

     if(nCheck = 1) then
 
         //check
		 CtrlSetState(szDialogName, RES_LEFT1CHECK_ID, BUTTON_CHECKED);
		 
		 CtrlSetState(szDialogName, RES_LEFT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT3CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT4CHECK_ID, BUTTON_UNCHECKED);
				  
		 CtrlSetState(szDialogName, RES_RIGHT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT3CHECK_ID, BUTTON_UNCHECKED);
     
     elseif (nCheck = 2) then
     
         CtrlSetState(szDialogName, RES_LEFT1CHECK_ID, BUTTON_UNCHECKED);
         
         //check
		 CtrlSetState(szDialogName, RES_LEFT2CHECK_ID, BUTTON_CHECKED);
		 
		 CtrlSetState(szDialogName, RES_LEFT3CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT4CHECK_ID, BUTTON_UNCHECKED);
				  
		 CtrlSetState(szDialogName, RES_RIGHT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT3CHECK_ID, BUTTON_UNCHECKED);
     
     elseif (nCheck = 3) then
     
         CtrlSetState(szDialogName, RES_LEFT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT2CHECK_ID, BUTTON_UNCHECKED);
		 
		 //check
		 CtrlSetState(szDialogName, RES_LEFT3CHECK_ID, BUTTON_CHECKED);
		 
		 CtrlSetState(szDialogName, RES_LEFT4CHECK_ID, BUTTON_UNCHECKED);
				  
		 CtrlSetState(szDialogName, RES_RIGHT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT3CHECK_ID, BUTTON_UNCHECKED);
     
     elseif (nCheck = 4) then
     
         CtrlSetState(szDialogName, RES_LEFT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT3CHECK_ID, BUTTON_UNCHECKED);
		 
		 //check
		 CtrlSetState(szDialogName, RES_LEFT4CHECK_ID, BUTTON_CHECKED);
				  
		 CtrlSetState(szDialogName, RES_RIGHT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT3CHECK_ID, BUTTON_UNCHECKED);
     
     elseif (nCheck = 5) then

         CtrlSetState(szDialogName, RES_LEFT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT3CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT4CHECK_ID, BUTTON_UNCHECKED);
				  
		 //check		  
		 CtrlSetState(szDialogName, RES_RIGHT1CHECK_ID, BUTTON_CHECKED);
		 
		 CtrlSetState(szDialogName, RES_RIGHT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT3CHECK_ID, BUTTON_UNCHECKED);
     
     elseif (nCheck = 6) then

         CtrlSetState(szDialogName, RES_LEFT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT3CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT4CHECK_ID, BUTTON_UNCHECKED);
				  	  
		 CtrlSetState(szDialogName, RES_RIGHT1CHECK_ID, BUTTON_UNCHECKED);
		 
		 //check
		 CtrlSetState(szDialogName, RES_RIGHT2CHECK_ID, BUTTON_CHECKED);
		 
		 CtrlSetState(szDialogName, RES_RIGHT3CHECK_ID, BUTTON_UNCHECKED);
     
     elseif (nCheck = 7) then
     
         CtrlSetState(szDialogName, RES_LEFT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT2CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT3CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_LEFT4CHECK_ID, BUTTON_UNCHECKED);
				  
		 CtrlSetState(szDialogName, RES_RIGHT1CHECK_ID, BUTTON_UNCHECKED);
		 CtrlSetState(szDialogName, RES_RIGHT2CHECK_ID, BUTTON_UNCHECKED);
		 
		 //check
		 CtrlSetState(szDialogName, RES_RIGHT3CHECK_ID, BUTTON_CHECKED);
		 
	endif;	 

end;



